React

** Environment setup...

- Install Node.js
- Install NPM
- Install Yarn

** Live Server

Andrew used live-server to host the intro page. The following
are the install and run commands:

npm install -g live-server
live-server -v
...navigate to the directory hosting your site's directory...
live-server .\public\

** yarn initialization

This is pretty much like npm init.

yarn init

Creates a `package.json` file, same as npm --init.

When you install a file with `yarn`, you'll end-up
with a `yarn.lock` file. This stores module dependencies.
The dependencies of the installed modules.

** Babel

npm install -g babel-cli@6.24.1

Once you install Babel, you need to install presets
so Babel can transform JSX into JavaScript

yarn add babel-preset-react@6.24.1
yarn add babel-preset-env@1.5.2

...or...

yarn add babel-preset-react@6.24.1 babel-preset-env@1.5.2

If you need to rebuild the node_modules folder, you can just
run the following:

yarn install

** Class Notes

1) JSX - JavaScript XML
 - It's a language syntax extension
 - It is a templating syntax provided by React
2) React can be used in different contents: Native, Virtual Reality (VR), DOM, etc.
3) You can verify React is working with the following steps...

 - Chrome
 - Developer Tools
 - Console pane
 - Type "React" and "ReactDOM" to make sure those variables exist.

`React` and `ReactDOM` are global objects.

4) Babel lets you translate code into Javascript
 - Commonly used to convert JS 6 and 7 to 5 for backward compatibility
 - Site: babeljs.io
 - You can use it to convert JSX to native JavaScript

babel src/app.js --out-file=public/scripts/app.js --presets="env,react"
babel src/app.js --out-file=public/scripts/app.js --presets="env,react" --watch

** Questions

Can live-server only serve up a directory named `public`?

